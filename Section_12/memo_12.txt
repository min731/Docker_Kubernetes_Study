# 설치
cmd systeminfo
Hypervisor 확인
#관리자 권한
powershell Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
#관리자 권한
cmd choco install kubernetes-cli
kubectl version --client

kubectl은 클러스터와 통신하기 위한 장치

cd %USERPROFILE%
mkdir .kube
cd .kube
config 파일 생성(확장자 X)

# minikube 설치
https://kubernetes.io/fr/docs/tasks/tools/install-minikube/
choco install minikube
minikube start --driver=hyperv
(docker desktop 실행 후)
(minikube start --driver=docker)

minikube status

# 브라우저로 열기
minikube dashboard

#쿠버네티스의 객체(Object)
Pods : 가장 작은 단위, 컨테이너를 보유, 하나 이상의 컨테이너,
       볼륨과 같은 공유 리소스 보유, 클러스터 내부 Ip가 있음,
       하나의 pod 안에 여러 컨테이너들은 localhost로 통신,
       AWS ECS의 'Task'와 유사,
       pod는 쿠버네티스에 의해 교체되거나 제거될 수 있음,
       
Deployment : Deployment 객체를 생성 후, 생성하고 관리해야 하는 Pod 수와
             컨테이너 수에 대해 지시
             하나 이상의 pod 제어,
             pause, delete, roll back 가능,
             스케일링, 트래픽/CPU 가동률 조건기반 오토스케일링,
             Deployment 객체로 pod 생성 자동화
Services
Volume
...

#명령 방식 vs 선언 방식



# 어플리케이션 쿠버네티스에 배포됌
docker build -t kub-first-app .

# 이미지를 클러스터로 보내기
# Deployment으로 Pod를 실행하고, 컨테이너를 실행
# 클러스터 실행 중인지 확인
minikube status
(kubectl status)

# 로컬 머신에서 쿠버네티스 클러스터로 명령을 보냄
kubectl help
# 새 Deployment 객체 생성(명령형 방식)(자동으로 쿠버네티스 클러스터로 전송됌)
kubectl create deployment first-app --image=kub-first-app

# 작동 후, deployment 객체 확인, 준비되지 않음
kubectl get deployments
# pods 확인, 준비되지 않음
kubectl get pods
# 이미지가 로컬 머신에만 존재하기 때문, 쿠버네티스 클러스에는 없음
# deployment 일단 삭제, pod도 삭제됌 
kubectl delete deployment first-app

# docker hub에 푸시, Repository 생성, 동일 이미지 생성
docker tag kub-first-app ypd04208625/kub-first-app
docker push ypd04208625/kub-first-app

# docker hub에 push 했으므로 클러스터 머신을 포함해 어디에서나 접근가능
kubectl create deployment first-app --image=ypd04208625/kub-first-app
kubectl get deployments
kubectl get pods
# 확인
kubectl dashboard 