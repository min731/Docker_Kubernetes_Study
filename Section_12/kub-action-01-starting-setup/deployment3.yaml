apiVersion: apps/v1
kind: Deployment #Service, Job ...
metadata: # 생성하는 객체의 이름, kubectl create deployment 이름
  name: second-app-deployment
spec: # 
  replicas: 1 # pod 수, 0도 가능
  selector:  # 선언적 접근 방식은 deployment와 일치시킬 selector를 지정해야 작동!
    matchLabels: # deployment가 제어할 pod를 Label들
      app: second-app
      tier: backend
    # matchExperssions: # 연산자로 표현 가능, 표현 방식이 다름
      # - {key: app, operator: In, values: [second-app, first-app]}
      # - {key: app, operator: NotIn, values: [second-app, first-app]}
  template: # 사용할 이미지
    metadata: # pod는 또다른 객체이기 때문에 metadata 지정
      labels: 
        app: second-app # app이라는 키와 값 second-app 지정, 사용자가 이름 지정
        tier: backend
    spec: # pod를 구성하는 방법 정의
      containers: #하나의 pod를 구성하는 여러 컨테이너
        - name: second-node # node.js 앱을 의미
          image: ypd04208625/kub-first-app-0716:latest
          imagePullPolicy: Always
          livenessProbe: # http요청 체크
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5
        # - name: ... 다른 컨테이너도 지정할 수 있음
          # image: ...
